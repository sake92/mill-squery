//| mill-version: 1.0.0

package build

import mill.*
import mill.api.BuildCtx
import mill.scalalib.*
import mill.scalalib.publish.*
import mill.util.VcsVersion
import mill.util.BuildInfo.{millVersion, millBinPlatform}

object plugin extends ScalaModule, SqueryPublishModule {
  def artifactName = "mill-squery-generator"
  def platformSuffix = s"_mill${millBinPlatform}"

  def scalaVersion = "3.7.1"

  def scalacOptions = Seq("-Ywarn-unused", "-deprecation")

  def mvnDeps = Seq(
    mvn"com.lihaoyi::mill-libs:$millVersion",
    mvn"ba.sake::squery-generator:0.7.0".withDottyCompat(scalaVersion()),
    mvn"com.h2database:h2:2.3.232",
    mvn"org.postgresql:postgresql:42.7.4",
    mvn"mysql:mysql-connector-java:8.0.33",
    mvn"org.mariadb.jdbc:mariadb-java-client:3.3.2",
    mvn"com.oracle.database.jdbc:ojdbc8:23.3.0.23.09"
  )

  object test extends ScalaTests, TestModule.Munit {
    def munitVersion = "1.1.0"

    def mvnDeps = Seq(
      mvn"com.lihaoyi::mill-testkit:$millVersion",
      mvn"com.lihaoyi::mill-contrib-flyway:$millVersion"
    )
  }
}

trait SqueryPublishModule extends SonatypeCentralPublishModule {
  def publishVersion = VcsVersion.vcsState().format()

  def pomSettings = PomSettings(
    organization = "ba.sake",
    url = "https://github.com/sake92/mill-squery",
    licenses = Seq(License.Common.Apache2),
    versionControl = VersionControl.github("sake92", "mill-squery"),
    description = "Mill plugin for Squery",
    developers = Seq(
      Developer("sake92", "Sakib Hadžiavdić", "https://sake.ba")
    )
  )
}
